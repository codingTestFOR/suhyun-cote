"""
구현 개념
머릿속에 있는 알고리즘을 정확하고 빠르게 프로그램으로 작성하는 것

동일한 알고리즘이면 더 간결하고 효율적인 코드가 잘 작성된 코드

아이디어 떠올리는 것과 별개로 구현 능력은 실무에서도 매우 중요

 

유형

완전 탐색

모든 경우의 수를 빠짐없이 다 계산하는 해결 방법
모든 경우의 수를 다 계산
반복문 혹은 재귀 함수를 적절히 사용하여 예외 케이스 모두 확인
일반적으로 DFS/BFS 알고리즘 이용
시뮬레이션

문제에서 제시하는 논리나 동작 과정을 그대로 코드로 옮겨야 하는 유형
완전 탐색과 해결 방법 비슷, 복잡한 구현 요구사항을 그대로 코드로 작성
원소를 나열하는 모든 경우의 수를 고려해야 하는 상황에서 보통 순열이나 조합 라이브러리 사용

→ 파이썬 표준 라이브러리 itertools로 쉽게 구현

"""
n = input().strip()
half = len(n) // 2
summary = 0

for i in range(half):
    summary += int(n[i])
    summary -= int(n[i + half])

print("LUCKY" if summary == 0 else "READY")
